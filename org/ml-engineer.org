#+TITLE: ML Engineer
https://s3.amazonaws.com/iridium-content/documents/en-US/machine-learning-engineer-nanodegree-program-syllabus.pdf

Syllabus: Machine Learning Engineer
Nanodegree Program
Prerequisites
To optimize your chances of success in this program, we recommend having experience with:
● Intermediate Python programming knowledge, including:
○ At least 40hrs of programming experience
○ Familiarity with data structures like dictionaries and lists
○ Experience with libraries like NumPy and pandas
● Intermediate knowledge of machine learning algorithms, including:
○ Supervised learning models, such as linear regression
○ Unsupervised models, such as k-means clustering
○ Deep learning models, such as neural networks
To prepare for this program, we suggest you take the Intro to Machine Learning Nanodegree Program.
Contact Info
While going through the program, if you have questions about anything, you can reach us at:
machine-support@udacity.com.
Program Overview
This goal of the Machine Learning Engineer Nanodegree program is to help students learn the key skills they
need to perform well as a machine learning engineer.
A graduate of this program will be able to:
● Test Python code and build a Python package of their own.
● Build predictive models using a variety of unsupervised and supervised machine learning techniques.
● Understand cloud deployment terminology and best practices.
1
Updated 5/1/19
● Use Amazon SageMaker to deploy machine learning models to production environments, such as a
web application or piece of hardware.
● A/B test two different deployed models and evaluate their performance.
● Utilize an API to deploy a model to a website such that it responds to user input, dynamically.
● Update a deployed model, in response to changes in the underlying data source.
This program is comprised of 4 courses and 4 projects. Each project you build will be an opportunity to
demonstrate what you’ve learned in the lessons. Your completed projects will become part of a career
portfolio that will demonstrate to potential employers that you have skills in feature engineering,
building machine learning algorithms, and model deployment.
Estimated Length of Program: 3 months
Frequency of Classes: Self-paced
Project Overview
One of our main goals at Udacity is to help you create a job-ready portfolio of completed projects.
Building a project is one of the best ways to test the skills you've acquired and to demonstrate your
newfound abilities to future employers or colleagues. Throughout this Nanodegree program, you'll have the
opportunity to prove your skills by building the following projects:
● Build a Python Package: Write a Python package on your own using software engineering best
practices for writing production level code. This project is optional and will not be graded.
● Deploy a Sentiment Analysis Model: Using SageMaker, deploy your own PyTorch sentiment
analysis model, which is trained to recognize the sentiment of movie reviews (positive or negative).
● Plagiarism Detector: Engineer features that can help identify cases of plagiarism in text and deploy
a trained plagiarism detection model using Amazon SageMaker.
● Capstone Project & Proposal: Complete a final project—choosing from a few, provided options or a
project of your own design—that involves data exploration and machine learning.
In the sections below, you'll find detailed descriptions of each project along with the course material that
presents the skills required to complete the project.
Portfolio Exercise: Build a Python Package
Exercise Description:
2
Updated 5/1/19
This program is all about understanding how to build machine learning algorithms and prepare them for
scalable, production systems. A first step towards building these systems is to gain an understanding of
writing production level code, which you have the option of doing by writing a Python package of your own.
Key Skills Demonstrated:
● Object-oriented programming
● Clean and modular code
● Code documentation
Supporting Lesson Content: Software Engineering
Lesson Title Learning Outcomes
Software Engineering
Practices
➔ Write clean, modular, and well-documented code
➔ Refactor code for efficiency
➔ Create unit tests to test programs
➔ Track actions and results of processes with logging
➔ Conduct and receive code reviews
Programming ➔ Understand when to use object-oriented programming
➔ Build and use classes
➔ Learn how large, modular Python packages and use object-oriented
programming
Upload a Package to PyPI ➔ Portfolio Exercise: Build your own Python package
3
Updated 5/1/19
Project: Deploy a Sentiment Analysis Model
Project Description:
In this project, you will use a recurrent neural network for the purpose of determining the sentiment of a
movie review using a dataset of text from IMdB. You will create and deploy this model using Amazon
SageMaker. After deploying your model, you will construct a simple web app which will interact with the
deployed model and categorize any new, input review.
Key Skills Demonstrated:
● Text analysis
● Model deployment via SageMaker
● APIs for web deployment
Supporting Lesson Content: Model Deployment
Lesson Title Learning Outcomes
Introduction to Deployment ➔ Gain familiarity with cloud and deployment terminology
➔ Understand the machine learning workflow in production
➔ Learn about workplace use cases of machine learning
Deploy a Model ➔ Deploy a model within SageMaker
➔ Predict housing prices in Boston using XGBoost on SageMaker
➔ Determine movie review sentiment using XGBoost on SageMaker
Web Hosting ➔ Learn to provide access to an endpoint from a website
➔ Use API Gateway and Lambda to integrate ML models into a web app
Model Monitoring ➔ Learn how to monitor the behavior of your models over time
➔ Tune hyperparameters of an XGBoost model using SageMaker’s
automatic hyperparameter tuning tools
➔ Run an A/B test on SageMaker to compare the tuned model to the
untuned model
Updating a Model ➔ Update your model to account for changes in the data that were
discovered during model monitoring
➔ Explore how to handle new phrases introduced to your model during
your sentiment analysis
4
Updated 5/1/19
Project: Plagiarism Detector
Project Description:
Use your machine learning skills to compare two text sources and identify cases of plagiarism. In this
project, you will extract relevant text features and train a model of your own design to do plagiarism
detection. Then, you will deploy your trained model using Amazon SageMaker.
Key Skills Demonstrated:
● Feature engineering
● Model design and evaluation
● Model deployment via SageMaker
Supporting Lesson Content: Machine Learning Case Studies
Lesson Title Learning Outcomes
Population Segmentation with
SageMaker
➔ Learn the breadth of algorithms available using AWS SageMaker.
➔ Understand how you can use unsupervised algorithms to analyze data
with SageMaker.
➔ Deploy an unsupervised model using SageMaker.
➔ Draw insights about your data by extracting model attributes.
Detecting Credit Card Fraud ➔ Build and improve a linear model to identify cases of payment fraud.
➔ Handle cases of class imbalance in the training data.
➔ Tune a model in SageMaker to improve its performance according to a
specific metric.
Deploying Custom Models ➔ Deploy a custom PyTorch model using SageMaker.
➔ Write a custom training script to train a model of your own design.
Time-Series Forecasting ➔ Process time-series data and format it for training a machine learning
model.
➔ Use SageMaker’s DeepAR algorithm for time-series forecasting.
➔ Deploy a model and use it to predict future data points.
5
Updated 5/1/19
Project: Capstone & Proposal
Project Description:
In this capstone project, you will leverage what you’ve learned throughout the program to build a machine
learning project of your choosing. You will define the problem you want to solve, investigate and explore the
data, identify and explore the data, then perform your analyses and develop a set of conclusions. You will
present the analysis and your conclusions in a blog post and GitHub repository. This project will serve as a
demonstration of your ability as a machine learning engineer, and will be an important piece of your job
ready portfolio.
Key Skills Demonstrated:
● All of the machine learning workflow, from data exploration to model training and evaluation
Supporting Lesson Content: Project Options
Supporting Lessons Learning Outcomes
Elective 1: Starbucks ➔ Use purchasing habits to arrive at discount measures to obtain and
retain customers.
➔ Identify groups of individuals that are most likely to be responsive to
rebates.
Elective 2: Arvato Financial
Services
➔ Work through a real-world dataset and challenge provided by Arvato
Financial Services, a Bertelsmann company.
➔ Top performers have a chance at an interview with Arvato or another
Bertelsmann company!
Elective 3: Convolutional
Neural Network
➔ Complete a project to identify dog breeds based on images.
Elective 4: Your Choice ➔ Build a new project entirely of your own choosing.
6
Updated 5/1/19
